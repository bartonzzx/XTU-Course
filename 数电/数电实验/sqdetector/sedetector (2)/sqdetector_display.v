//*************************************************************************
//   > 文件名: sqdetector_display.v
//   > 描述  ：序列检测器显示模块，调用FPGA板上的IO接口和触摸屏
//   > 作者  : 成洁
//   > 日期  : 2021-02-18
//*************************************************************************
module sqdetector_display(
    //时钟与复位信号
     input clk,
    input resetn,    //后缀"n"代表低电平有效

    //拨码开关，用于选择输入数
    input  input_sel, //0:输入为序列检测器预置数据(setd)
                           //1:输入为序列信号发生器预置数据(din)                        
    
   //脉冲开关，用于产生脉冲clock，实现单步执行
    input clock,
   
    //序列检测器数据检测结果输出端
    output dc,
    //序列检测器状态码输出端
    output [3:0] c,

    //触摸屏相关接口，不需要更改
    output lcd_rst,
    output lcd_cs,
    output lcd_rs,
    output lcd_wr,
    output lcd_rd,
    inout[15:0] lcd_data_io,
    output lcd_bl_ctr,
    inout ct_int,
    inout ct_sda,
    output ct_scl,
    output ct_rstn
    );
//-----{调用sqdetector模块}begin
    reg   [7:0] setd;     // sqdetector8位预置数输入端
    wire  ds;
    sqdetector sqd(.ds(ds),.setd(setd),.clk(clock),.clrn(resetn),.dc(dc),.c(c));
//-----{调用sqdetector模块}end

//-----{调用sequencer模块}begin
    reg   [7:0] din;  // sequencer预置数据输入端
    
    sequencer sequencer_module(.clk(clock),.clrn(resetn),.din(din),.ds(ds));
//-----{调用sequencer模块}end

//---------------------{调用触摸屏模块}begin--------------------//
//-----{实例化触摸屏}begin
//此小节不需要更改
    reg         display_valid;
    reg  [39:0] display_name;
    reg  [31:0] display_value;
    wire [5 :0] display_number;
    wire        input_valid;
    wire [31:0] input_value;

    lcd_module lcd_module(
        .clk            (clk           ),   //10Mhz
        .resetn         (resetn        ),

        //调用触摸屏的接口
        .display_valid  (display_valid ),
        .display_name   (display_name  ),
        .display_value  (display_value ),
        .display_number (display_number),
        .input_valid    (input_valid   ),
        .input_value    (input_value   ),

        //lcd触摸屏相关接口，不需要更改
        .lcd_rst        (lcd_rst       ),
        .lcd_cs         (lcd_cs        ),
        .lcd_rs         (lcd_rs        ),
        .lcd_wr         (lcd_wr        ),
        .lcd_rd         (lcd_rd        ),
        .lcd_data_io    (lcd_data_io   ),
        .lcd_bl_ctr     (lcd_bl_ctr    ),
        .ct_int         (ct_int        ),
        .ct_sda         (ct_sda        ),
        .ct_scl         (ct_scl        ),
        .ct_rstn        (ct_rstn       )
    ); 
//-----{实例化触摸屏}end

//-----{从触摸屏获取输入}begin
//根据实际需要输入的数修改此小节，
//建议对每一个数的输入，编写单独一个always块
    //当input_sel为0时，表示输入为序列检测器预置数据(setd)
    always @(posedge clk)
    begin
        if (!resetn)
        begin
            setd <= 4'd0;
        end
        else if (input_valid && input_sel==1'b0)
        begin
            setd <= input_value[7:0];
        end
    end
    
   //当input_sel为1时，表示输入数为序列信号发生器预置数据(din)
    always @(posedge clk)
    begin
        if (!resetn)
        begin
            din <= 32'b0;
        end
        else if (input_valid && input_sel==1'b1)
        begin
            din <= input_value[7:0];
        end
    end
//-----{从触摸屏获取输入}end

//-----{输出到触摸屏显示}begin
//根据需要显示的数修改此小节，
//触摸屏上共有44块显示区域，可显示44组32位数据
//44块显示区域从1开始编号，编号为1~44，
    always @(posedge clk)
    begin
        case(display_number)
            6'd1 :
            begin
                display_valid <= 1'b1;
                display_name  <= "CLRN";
                display_value <= resetn;
            end
            6'd3 :
            begin
                display_valid <= 1'b1;
                display_name  <= "SETD";
                display_value <= {24'b0,setd};
            end
            6'd4 :
            begin
                display_valid <= 1'b1;
                display_name  <= "DIN";
                display_value <= {24'b0,din};
            end
            6'd5 :
            begin
                display_valid <= 1'b1;
                display_name  <= "C";
                display_value <= {28'b0,c};
            end
            6'd6 :
            begin
                display_valid <= 1'b1;
                display_name  <= "DC";
                display_value <= dc;
            end                   
            default :
            begin
                display_valid <= 1'b0;
                display_name  <= 40'd0;
                display_value <= 32'd0;
            end
        endcase
    end
//-----{输出到触摸屏显示}end
//----------------------{调用触摸屏模块}end---------------------//
endmodule
